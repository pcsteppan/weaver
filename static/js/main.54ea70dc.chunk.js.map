{"version":3,"sources":["Classes/Loom.ts","Components/ToggleCell/ToggleCell.js","Components/SubTable/SubTable.js","Components/Cell/Cell.js","Components/WeavingSubTable/WeavingSubTable.js","Components/DraftingTable/DraftingTable.js","WeavingPatterns/weavingPatterns.js","Components/PatternItem/PatternItem.js","Components/PatternItemList/PatternItemList.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["ThreadType","ToggleCell","props","handleClick","bind","event","this","toggle","className","isActive","onClick","data-row","row","data-col","col","React","Component","SubTable","handleToggle","name","data","map","rowIndex","cell","colIndex","constructTable","i","Cell","style","WeavingSubTable","representation","Thread","type","default","backgroundColor","Harness","threads","Set","thread","add","delete","Treadle","index","harnesses","id","harness","Array","from","Loom","dimensions","warpThreads","weftThreads","treadles","treadlingInstructions","warp","fill","Warp","weft","Weft","_","x","y","treadle","threadRef","getAttachedHarnesses","some","has","DraftingTable","state","weftCount","warpCount","harnessCount","treadleCount","threadingTableData","arrayFiller","tieupTableData","weavingTableData","treadlingTableData","loom","rows","cols","value","tableName","stateToAccess","parseInt","target","dataset","harnessRef","warpThreadRef","unattachThread","attachThread","inverseRow","console","log","treadleRef","unattachHarness","attachHarness","setTreadlingInstruction","newTable","getUpdatedTableDataFromLoom","newState","setState","updateWeaveNew","arr","newWeavingData","length","getTopThreadAt","str","min","Number","MAX_VALUE","max","MIN_VALUE","sepStr","split","forEach","substring","includes","num","Math","newStr","replaceAll","match","p1","p2","repeat","endsWith","patternData","expandedThreadingString","expandPatternString","threading","threadingData","threadingDimensions","arrayDimensionsFromString","expandedTreadlingString","treadling","treadlingData","treadlingDimensions","expandedTieupString","tieup","tieupData","tieupDimensions","newLoom","harnessIndex","rowStr","prevProps","loomInstanceFromPatternData","patterns","PatternItem","handleChange","class","PatternItemList","pattern","App","currentPattern","handlePatternChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54ea70dc.chunk.js","sourcesContent":["enum ThreadType {\r\n  Warp = \"WARP\",\r\n  Weft = \"WEFT\"\r\n}\r\n\r\n// Interfaces\r\n\r\ntype LoomDimensions={\r\n  warp: number;\r\n  weft: number;\r\n  harnesses: number;\r\n  treadles: number; \r\n}\r\n\r\ninterface ThreadRepresentationInterface {\r\n  [cssName:string] : string;\r\n}\r\n\r\ninterface ThreadInterface {\r\n  type: ThreadType;\r\n  representation: ThreadRepresentationInterface;\r\n}\r\n\r\ninterface HarnessInterface {\r\n  threads: Set<ThreadInterface>;\r\n}\r\n\r\ninterface TreadleInterface {\r\n  harnesses: Set<HarnessInterface>\r\n}\r\n\r\ninterface LoomInterface {\r\n  dimensions: LoomDimensions;\r\n  warpThreads: ThreadInterface[];\r\n  weftThreads: ThreadInterface[];\r\n  harnesses: HarnessInterface[];\r\n  treadles: TreadleInterface[];\r\n  treadlingInstructions: (TreadleInterface|null)[];\r\n  // tieup: Map<TreadleInterface, HarnessInterface[]>;\r\n}\r\n\r\n// Implementation\r\n\r\ntype ThreadRepresentation={\r\n  [cssName:string]: string\r\n}\r\n\r\nclass Thread implements ThreadInterface {\r\n  type: ThreadType;\r\n  representation: ThreadRepresentation;\r\n\r\n  constructor(type: ThreadType, representation={default: \"\"}) {\r\n    this.type = type;\r\n    this.representation = representation;\r\n\r\n    // default thread representation\r\n    if(\"default\" in representation){\r\n      if(this.type === 'WARP'){\r\n        // default warp thread color is black\r\n        this.representation = {backgroundColor: \"#bb8\"}\r\n      } else {\r\n        // default weft thread color is white\r\n        this.representation = {backgroundColor: \"#229\"}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Harness implements HarnessInterface{\r\n  threads: Set<Thread>;\r\n  constructor(){\r\n    this.threads = new Set<Thread>();\r\n  }\r\n\r\n  attachThread(thread: Thread) {\r\n    this.threads.add(thread);\r\n  }\r\n\r\n  unattachThread(thread: Thread) {\r\n    this.threads.delete(thread);\r\n  }\r\n}\r\n\r\nclass Treadle implements TreadleInterface {\r\n  harnesses: Set<Harness>;\r\n  id: number;\r\n\r\n  constructor(index: number) {\r\n    this.id = index;\r\n    this.harnesses = new Set<Harness>();\r\n  }\r\n\r\n  attachHarness(harness: Harness) {\r\n    this.harnesses.add(harness);\r\n  }\r\n\r\n  unattachHarness(harness: Harness) {\r\n    this.harnesses.delete(harness);\r\n  }\r\n\r\n  getAttachedHarnesses() {\r\n    return Array.from(this.harnesses);\r\n  }\r\n}\r\n\r\nclass Loom implements LoomInterface {\r\n  dimensions: LoomDimensions;\r\n  warpThreads: Thread[];\r\n  weftThreads: Thread[];\r\n  harnesses: Harness[];\r\n  treadles: Treadle[];\r\n  treadlingInstructions: (Treadle|null)[];\r\n  \r\n  constructor(dimensions: LoomDimensions){\r\n    this.dimensions = dimensions;\r\n    this.warpThreads = new Array(dimensions.warp).fill(null).map(() => new Thread(ThreadType.Warp));\r\n    this.weftThreads = new Array(dimensions.weft).fill(null).map(() => new Thread(ThreadType.Weft));\r\n    this.harnesses = new Array(dimensions.harnesses).fill(null).map(() => new Harness());\r\n    this.treadles = new Array(dimensions.treadles).fill(null).map((_, i) => new Treadle(i));\r\n    this.treadlingInstructions = new Array(dimensions.weft).fill(null);\r\n  }\r\n\r\n  getTopThreadAt(x: number, y: number) : Thread{\r\n    const treadle = this.treadlingInstructions[y];\r\n    if (treadle instanceof Treadle){\r\n      const threadRef : Thread = this.warpThreads[x];\r\n      const warpOnTop = treadle.getAttachedHarnesses().some((harness)=>harness.threads.has(threadRef));\r\n      return warpOnTop ? threadRef : this.weftThreads[y];\r\n    }\r\n    return this.weftThreads[y];\r\n  }\r\n\r\n  setTreadlingInstruction(row: number, col: number){\r\n    if(this.treadlingInstructions[row]===this.treadles[col]){\r\n      this.treadlingInstructions[row] = null;\r\n    } else {\r\n      this.treadlingInstructions[row] = this.treadles[col];\r\n    }\r\n  }\r\n}\r\n\r\nexport default Loom;","import React from 'react';\r\nimport './ToggleCell.css'\r\n\r\nclass ToggleCell extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n  handleClick (event) {\r\n    this.props.toggle(event);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <td className={`toggleCell ${this.props.isActive ? \"active\" : \"\"}`}\r\n          onClick={this.handleClick}\r\n          data-row={this.props.row}\r\n          data-col={this.props.col}>\r\n            {/* <div className=\"dot\"></div> */}\r\n      </td>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToggleCell;","import React from 'react'\r\nimport ToggleCell from '../ToggleCell/ToggleCell'\r\n\r\nclass SubTable extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  handleToggle(event){\r\n    this.props.handleToggle(event, this.props.name);\r\n  }\r\n\r\n  constructTable(data){\r\n    return data.map((row, rowIndex) => {\r\n      return [row.map((cell, colIndex) => {\r\n        return <ToggleCell key={`${colIndex}_${rowIndex}`}\r\n          row={rowIndex}\r\n          col={colIndex}\r\n          toggle={this.handleToggle}\r\n          isActive={cell}/>\r\n      })]\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <table>\r\n      <tbody>\r\n        {this.constructTable(this.props.data).map((row, i) => <tr key={i}>{row}</tr>)}\r\n      </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SubTable;","import React from 'react';\r\nimport '../Cell/Cell.css'\r\n\r\nclass Cell extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <td className=\"cell\"\r\n          data-row={this.props.row}\r\n          data-col={this.props.col}\r\n          style={this.props.style}>\r\n      </td>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cell;","import React from 'react'\r\nimport Cell from '../Cell/Cell'\r\n\r\nclass WeavingSubTable extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  constructTable(data){\r\n    return data.map((row, rowIndex) => {\r\n      return [row.map((representation, colIndex) => {\r\n        return <Cell key={`${colIndex}_${rowIndex}`}\r\n          row={rowIndex}\r\n          col={colIndex}\r\n          style={representation}/>\r\n      })]\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <table>\r\n      <tbody>\r\n        {this.constructTable(this.props.data).map((row, i) => <tr key={i}>{row}</tr>)}\r\n      </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeavingSubTable;","import React from 'react';\r\nimport SubTable from '../SubTable/SubTable'\r\nimport WeavingSubTable from '../WeavingSubTable/WeavingSubTable'\r\nimport Loom from '../../Classes/Loom.ts';\r\nimport './DraftingTable.css';\r\n\r\nclass DraftingTable extends React.Component{\r\n  arrayFiller(rows, cols, value) {\r\n    const array = new Array(rows).fill([]).map(() => {\r\n      return new Array(cols).fill(value)\r\n    });\r\n    return array;\r\n  }\r\n  \r\n  constructor(props){\r\n    super(props);\r\n\r\n    const weftCount = 50;\r\n    const warpCount = 50;\r\n    const harnessCount = 4;\r\n    const treadleCount = 4;\r\n\r\n    this.state = {\r\n      weftCount:weftCount,\r\n      warpCount: warpCount,\r\n      harnessCount: harnessCount,\r\n      treadleCount: treadleCount,\r\n      threadingTableData: this.arrayFiller(harnessCount, warpCount, false),\r\n      tieupTableData: this.arrayFiller(harnessCount, treadleCount, false),\r\n      weavingTableData: this.arrayFiller(weftCount, warpCount, {backgroundColor: \"#00f\"}),\r\n      treadlingTableData: this.arrayFiller(weftCount, treadleCount, false)\r\n    }\r\n\r\n    this.loom = new Loom({\r\n      warp: warpCount,\r\n      weft: weftCount,\r\n      harnesses: harnessCount,\r\n      treadles: treadleCount \r\n    });\r\n\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  handleToggle(event, tableName){\r\n    const stateToAccess = tableName + \"Data\";\r\n    const row = parseInt(event.target.dataset.row);\r\n    const col = parseInt(event.target.dataset.col);\r\n\r\n    if(tableName === 'threadingTable'){\r\n      // attach or unattach thread from harness\r\n      const harnessRef = this.loom.harnesses[row]\r\n      const warpThreadRef = this.loom.warpThreads[col];\r\n      if(!harnessRef.threads.has(warpThreadRef)){\r\n        harnessRef.attachThread(warpThreadRef);\r\n      } else {\r\n        harnessRef.unattachThread(warpThreadRef);\r\n      }\r\n    }\r\n    else if(tableName === 'tieupTable'){\r\n      // reverse data here such that bottom left cell is considered 0,0\r\n      const inverseRow = this.loom.dimensions.harnesses - (row+1);\r\n      console.log(\"row: \", inverseRow);\r\n      console.log(\"col: \", col);\r\n      const treadleRef = this.loom.treadles[col];\r\n      const harnessRef = this.loom.harnesses[inverseRow];\r\n\r\n      if(!treadleRef.harnesses.has(harnessRef)){\r\n        treadleRef.attachHarness(harnessRef);\r\n      } else {\r\n        treadleRef.unattachHarness(harnessRef);\r\n      }\r\n    }\r\n    else if(tableName === 'treadlingTable'){\r\n      this.loom.setTreadlingInstruction(row, col);\r\n    }\r\n    \r\n    const newTable = this.getUpdatedTableDataFromLoom(tableName);\r\n    const newState = {[stateToAccess] : newTable};\r\n    this.setState(newState);\r\n    this.setState({weavingTableData: this.updateWeaveNew()});\r\n  }\r\n\r\n  getUpdatedTableDataFromLoom(tableName) {\r\n    let newTable;\r\n\r\n    if(tableName === 'threadingTable'){\r\n      newTable = this.arrayFiller(this.loom.dimensions.harnesses, this.loom.dimensions.warp, false);\r\n      newTable = newTable.map((row, rowIndex) => {\r\n        return row.map((cell, colIndex) => {\r\n          return this.loom.harnesses[rowIndex].threads.has(this.loom.warpThreads[colIndex]);\r\n        })\r\n      })\r\n    }\r\n    else if(tableName === 'tieupTable'){\r\n      newTable = this.arrayFiller(this.loom.dimensions.harnesses, this.loom.dimensions.treadles, false);\r\n      newTable = newTable.map((row, rowIndex) => {\r\n        return row.map((cell, colIndex) => {\r\n          return this.loom.treadles[colIndex].harnesses.has(this.loom.harnesses[this.loom.dimensions.harnesses - (rowIndex+1)]);\r\n        })\r\n      })\r\n    }\r\n    else if(tableName === 'treadlingTable'){\r\n      newTable = this.arrayFiller(this.loom.dimensions.weft, this.loom.dimensions.treadles, false);\r\n      newTable = newTable.map((row, rowIndex) => {\r\n        const arr = new Array(this.loom.dimensions.treadles).fill(false);\r\n        if(this.loom.treadlingInstructions[rowIndex]===null)\r\n          return arr;\r\n        arr[this.loom.treadlingInstructions[rowIndex].id] = true;\r\n        return arr;\r\n      })\r\n    }\r\n\r\n    return newTable;\r\n  }\r\n\r\n  updateWeaveNew(){\r\n    const newWeavingData = this.arrayFiller(this.state.weftCount, this.state.warpCount, {backgroundColor: \"#000\"});\r\n    for(let row = 0; row < newWeavingData.length; row++){\r\n      for(let col = 0; col < newWeavingData[0].length; col++){\r\n        const thread = this.loom.getTopThreadAt(col, row);\r\n        newWeavingData[row][col] = thread.representation;\r\n      }\r\n    }\r\n    return newWeavingData;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <table className=\"draftingTable\">\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"threadingTableContainer\">\r\n            <SubTable\r\n              name=\"threadingTable\"\r\n              data={this.state.threadingTableData}\r\n              handleToggle={this.handleToggle}/>\r\n          </td>\r\n          <td className=\"tieupTableContainer\">\r\n            <SubTable\r\n              name=\"tieupTable\"\r\n              data={this.state.tieupTableData}\r\n              handleToggle={this.handleToggle}/>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"weavingTableContainer\">\r\n            <WeavingSubTable\r\n              name=\"weavingTable\"\r\n              data={this.state.weavingTableData}/>\r\n          </td>\r\n          <td className=\"treadlingTableContainer\">\r\n            <SubTable\r\n              name=\"treadlingTable\"\r\n              data={this.state.treadlingTableData}\r\n              handleToggle={this.handleToggle}/>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n  arrayDimensionsFromString(str) {\r\n    let min = Number.MAX_VALUE;\r\n    let max = Number.MIN_VALUE;\r\n    let sepStr = str.split(\",\");\r\n    let length = 0;\r\n    sepStr.forEach(substring => {\r\n      if(substring.includes(\"-\")) {\r\n        substring.split(\"-\").forEach(num => {\r\n          min = Math.min(min, parseInt(num));\r\n          max = Math.max(max, parseInt(num));\r\n        })\r\n      } else {\r\n        min = Math.min(min, parseInt(substring));\r\n        max = Math.max(max, parseInt(substring));\r\n      }\r\n      length += 1;\r\n    })\r\n    const numCols = length;\r\n    const numRows = max-min;\r\n    return {\r\n      rows: numRows+1,\r\n      cols: numCols,\r\n    }\r\n  }\r\n\r\n  expandPatternString(str) {\r\n    // 1x4 = 1,1,1,1,\r\n    const regex = /(\\d+)x(\\d+)/g;\r\n    let newStr = str.replaceAll(regex, (match, p1, p2) => {\r\n      const newSubstring = (p1+\",\").repeat(p2)\r\n      return newSubstring\r\n    })\r\n    \r\n    newStr = newStr.replaceAll(/,,/g, \",\")\r\n    if (newStr.endsWith(\",\")) \r\n      newStr = newStr.substring(0, newStr.length-1);\r\n    return newStr;\r\n  }\r\n\r\n  loomInstanceFromPatternData(patternData){\r\n    // threading\r\n    const expandedThreadingString = this.expandPatternString(patternData.threading);\r\n    const threadingData = expandedThreadingString.split(\",\");\r\n    const threadingDimensions = this.arrayDimensionsFromString(expandedThreadingString);\r\n\r\n    // treadling instructions\r\n    const expandedTreadlingString = this.expandPatternString(patternData.treadling);\r\n    const treadlingData = expandedTreadlingString.split(\",\");\r\n    const treadlingDimensions = this.arrayDimensionsFromString(expandedTreadlingString);\r\n\r\n    // tieup\r\n    const expandedTieupString = this.expandPatternString(patternData.tieup);\r\n    const tieupData = expandedTieupString.split(\",\");\r\n    const tieupDimensions = this.arrayDimensionsFromString(expandedTieupString);\r\n\r\n    const newLoom = new Loom({\r\n      warp: threadingDimensions.cols,\r\n      weft: treadlingDimensions.cols,\r\n      treadles: tieupDimensions.cols,\r\n      harnesses:  tieupDimensions.rows\r\n    });\r\n\r\n    // threading processing\r\n    for(let col = 0; col < threadingDimensions.cols; col++){\r\n      const row = parseInt(threadingData[threadingDimensions.cols-1-col]) - 1;\r\n      const harnessIndex = threadingDimensions.rows-1-row;\r\n      newLoom.harnesses[harnessIndex].attachThread(newLoom.warpThreads[col]);\r\n    }\r\n\r\n    // treadling processing\r\n    for(let row = 0; row < treadlingDimensions.cols; row++){\r\n      const col = parseInt(treadlingData[row]) - 1;\r\n      newLoom.treadlingInstructions[row] = newLoom.treadles[col];\r\n    }\r\n\r\n    // tieup processing\r\n    for(let col = 0; col < tieupDimensions.cols; col++){\r\n      const rows = tieupData[col];\r\n      rows.split(\"-\").forEach(rowStr => {\r\n        const row = parseInt(rowStr) - 1;\r\n        newLoom.treadles[col].attachHarness(newLoom.harnesses[row]);\r\n      })\r\n    }\r\n\r\n    return newLoom;\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.patternData === null) return;\r\n    if(prevProps.patternData === this.props.patternData) return;\r\n\r\n    this.loom = this.loomInstanceFromPatternData(this.props.patternData.data);\r\n\r\n    const weftCount = this.loom.dimensions.weft;\r\n    const warpCount = this.loom.dimensions.warp;\r\n    const harnessCount = this.loom.dimensions.harnesses;\r\n    const treadleCount = this.loom.dimensions.treadles;\r\n\r\n    const newState = {\r\n      weftCount: weftCount,\r\n      warpCount: warpCount,\r\n      harnessCount: harnessCount,\r\n      treadleCount: treadleCount,\r\n      threadingTableData: this.getUpdatedTableDataFromLoom(\"threadingTable\"),\r\n      tieupTableData: this.getUpdatedTableDataFromLoom(\"tieupTable\"),\r\n      treadlingTableData: this.getUpdatedTableDataFromLoom(\"treadlingTable\")\r\n    }\r\n\r\n    this.setState(newState, () => {\r\n      this.setState({weavingTableData: this.updateWeaveNew()});\r\n    });\r\n  }\r\n}\r\n\r\nexport default DraftingTable;\r\n","export const patterns = [\r\n  {\r\n    name: \"Basic Twill\",\r\n    data: {\r\n      threading:  \"1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Periwinkle\",\r\n    data: {\r\n      threading:  \"3,2,1,4,3,2,1,4,3,4,3,2,3,2,1,4,3,4,1,2,3,2,3,4,3,4,1,2\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"3,2,1,4x3,3x3,2,1,4x2,1,2,3x3,4x3,1,2,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Diadem\",\r\n    data: {\r\n      threading:  \"4,1,2,3,4,1,2,3,4,1,2,3,2,3,2,1,4,3,4,3,4,1,2,3,2,3,2,1,4,3,2,1,4,3,2,1,4,1\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"3x2,4,1,2,3,4,1,2,3,4,1x4,4,3,2x4,3,4,1x4,4,3,2,1,4,3,2,1,4,3x2\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Rings and Chains\",\r\n    data: {\r\n      threading:  \"1,2,3,4,1,2,3,4,1,2,3,4,1,4,1,4,3,4,3,2,3,2,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,4,1,2,1,2,3,2,3,4,3,4,1,4,1,4,3,2,1,4,1,2,3,4\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"1,2,3,4,1x4,4x3,3x3,2x3,1x2,2x2,1x2,2x2,1x2,2x2,1x2,2x2,1x2,2x2,1x2,2x3,3x3,4x3,1x4,4,3,2,1\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Wheel of Fortune\",\r\n    data: {\r\n      threading:  \"1,2,3,4,1,2,1,2,3,2,3,4,3,4,1,4,3,4,1,4,3,4,3,2,3,2,1,2,1,4,3,2,1,4,3,2,1,4,3,2,3,2,1,2,1,4,1,4,3,4,1,4,3,4,1,4,1,2,1,2,3,2,3,4,1,2,3,4\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"2,3,4,1,2x3,3x3,4x3,1x2,4x2,1x2,4x3,3x3,2x3,1,4,3,2,1,4,3,2,1,4,3x3,2x3,1x3,4x2,1x2,4x2,1x3,2x3,3x3,4,1,2,3,4,1\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Chariot Wheel No. 3\",\r\n    data: {\r\n      threading:  \"4,3,2,1,4,3,2,3,4,3,2,3,4,1,4,1,4,1,2,1,2,1,4,1,2,1,4,1,2,1,2,1,4,1,4,1,4,3,2,3,4,3,2,3,4,1,2,3\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"4,3,2,1,4,3x2,4x2,3x2,4,1x5,2x4,1x2,2x2,1x2,2x4,1x5,4,3x2,4x2,3x2,4,1,2,3,4\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Chariot Wheel No. 3 Alt\",\r\n    data: {\r\n      threading:  \"4,3,2,1,4,3,2,3,4,3,2,3,4,1,4,1,4,1,2,1,2,1,4,1,2,1,4,1,2,1,2,1,4,1,4,1,4,3,2,3,4,3,2,3,4,1,2,3\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"3,4,1,2,3,4x2,3x2,4x2,3,2x5,1x4,2x2,1x2,2x2,1x4,2x5,3,4x2,3x2,4x2,3,2,1,4,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Church Windows\",\r\n    data: {\r\n      threading:  \"3,2,1,4,3,4,3,4,1,4,1,2,1,4,1,4,3,4,3,4,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,2,3,2,1,4,3,4,3,4,1,4,1,2,1,4,1,4,3,4,3,4,2,1\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"3,2,1,4x4,1x3,2x2,1x3,4x4,1,2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2x2,3x2,2,1,4x4,1x3,2x2,1x3,4x4,1,2,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Cambridge Beauty\",\r\n    data: {\r\n      threading:  \"2,3,4,1,4,1,4,1,4,3,4,3,4,3,2,3,2,3,2,1,2,1,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,3,4,3,2,1,2,1,2,1,2,3,2,3,2,3,4,3,4,3,4,1,4,1,4,1,4,3\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"3,4,1x6,4x5,3x5,2x6,3,4x2,3,2x2,3,4x2,3,2x2,3,4x2,3,2x2,3,4x2,3,2x2,3,4x2,3,2x6,3x5,4x5,1x6,4,3\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Star of Bethlehem\",\r\n    data: {\r\n      threading:  \"2,3,4,1,2,3,4,1,2,3,4,1,2,1,2,3,2,3,4,3,4,1,4,1,2,3,4,1,4,3,2,1,4,1,4,3,4,3,2,3,2,1,2,1,4,3,2,1\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"2,3,4,1,2,3,4,1,2,3,4,1,2x3,3x3,4x3,1x3,1,2,3,4,1x2,4,3,2,1x3,4x3,3x3,2x3,1,4,3,2\"\r\n    }\r\n  },\r\n  {\r\n    name: \"Maltese Cross\",\r\n    data: {\r\n      threading:  \"1,2,3,4,1,2,3,4,1,2,3,4,1,2,1,4,1,4,3,4,3,2,3,2,1,2,1,4,1,2,1,4,1,2,1,2,3,2,3,4,3,4,1,4,1,2,1,4,3,2\",\r\n      tieup:      \"1-4,1-2,2-3,3-4\",\r\n      treadling:  \"2,1,4,3,2,1,4,3,2x2,3x3,4x3,1x3,2x3,3x2,2x2,3x2,2x3,1x3,4x3,3x3,2x2,3,4,1,2\"\r\n    }\r\n  }\r\n]\r\n","import React from 'react'\r\nimport './PatternItem.css'\r\n\r\nclass PatternItem extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(){\r\n    this.props.handleChange(this.props.index);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <li class=\"patternItem\" onClick={this.handleClick}>{this.props.data.name}</li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PatternItem;","import React from 'react'\r\nimport {patterns} from '../../WeavingPatterns/weavingPatterns.js'\r\nimport PatternItem from '../PatternItem/PatternItem.js'\r\nimport './PatternItemList.css'\r\n\r\nclass PatternItemList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  handleChange(i){\r\n    this.props.handleChange(i);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <ul class=\"patternList\">\r\n      {patterns.map((pattern, i) => {\r\n        return <PatternItem\r\n          handleChange={this.handleChange}\r\n          index={i}\r\n          data={pattern} />\r\n      })}\r\n    </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PatternItemList;","import React from 'react'\nimport DraftingTable from '../DraftingTable/DraftingTable'\nimport PatternItemList from '../PatternItemList/PatternItemList'\nimport { patterns } from '../../WeavingPatterns/weavingPatterns.js'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {currentPattern:null};\n    this.handlePatternChange = this.handlePatternChange.bind(this);\n  }\n\n  handlePatternChange(i){\n    this.setState({currentPattern: patterns[i]});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PatternItemList handleChange={this.handlePatternChange} />\n        <DraftingTable patternData={this.state.currentPattern} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}